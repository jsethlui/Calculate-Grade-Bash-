#!/usr/bin/env bash

calculate_new_grade() {
    declare -a all_categories           # array of all categories (i.e hw, exams, etc)
    declare -a percentage_category      # 0'th pos in this array is weight of 0'th pos in all_category array
    declare -a user_values

    echo -n "Enter number of categories: "
    read num_categories

    echo "Enter name of each category, its respective weight (%), and your score"
    for i in {1..num_categories}; do
        echo -n "Category Name: "
        read category_name
        all_categories+=category_name   # appending category to array

        echo -n "Category Weight: "
        read category_weight
        percentage_category+=category_weight
    done


}

recalculate_grade() {
    echo "another something"
}

read_grades() {
    while IFS= read -r line; do
        echo "$line"
    done < saved_data.txt
}

clear_grades() {
    while IFS= read -r line; do
        echo "" >> saved_data.txt
    done < saved_data.txt
    echo "File cleared"
}

echo -e "\nSelect from one of the following options:"
echo "  [0] Calculate new grade"
echo "  [1] Recalculate pre-existing grade"
echo "  [2] Read pre-existing grades"
echo "  [3] Clear all grades"
echo "  [x] Exit"
echo -n "Input: "
read user_option

while : ; do    # do while user_option != "x"
    case $user_option in
    0)    # Calculating new grade
        calculate_new_grade
        ;;
    1)    # Recalculating pre-existing grades
        echo "Recalculating pre-existing grade"
        ;;
    2)    # Reading previous grades
        read_grades | less  # piping to another window for clarity
        ;;
    3)    # Clearing all grades
        echo -n "Type CLEAR to confirm or [x] to exit: "
        read user_choice
        while : ; do
            case $user_choice in
                CLEAR)
                    echo "Clearing file"
                    clear_grades
                    ;;
                x)
                    echo "Exiting..."
                    ;;
                *)
                    echo "Invalid option"
                    ;;
             esac
             [[ user_choice == "x" ]] || break
        done
        ;;
    x)    # Exiting
        echo -e "\nExiting..."
        ;;
    *)    # default, if option given is invalid
        echo "Invalid option, please try again"
        ;;
    esac
    [[ user_option == "x" ]] || break
done      
echo ""